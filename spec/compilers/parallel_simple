component Main {
  fun test : Promise(Never, String) {
    parallel {
      a = "Hello"
      b = "World"
    } then {
      a + b
    }
  }

  fun render : String {
    test()

    ""
  }
}
--------------------------------------------------------------------------------
class A extends _C {
  a() {
    return (async () => {
      let _ = null;

      try {
        let b = null;
        let c = null;

        await Promise.all([
          (async () => {
            b = await `Hello`
          })(),
          (async () => {
            c = await `World`
          })()
        ]);

        _ = b + c;
      } catch (_error) {
        if (!(_error instanceof DoError)) {
          console.warn(`Unhandled error in parallel expression:`);
          console.warn(_error);
        }
      };

      return _;
    })();
  }

  render() {
    this.a();
    return ``;
  }
};

A.displayName = "Main";
