enum A(a) {
  B(a)
}

enum C(a) {
  D(A(a))
  X
}

component Main {
  fun test (b : C(a)) : a {
    case (b) {
      C::X => ""
      C::D(a) =>
        case (a) {
          A::B(c) =>
            c
        }
    }
  }

  fun render : String {
    test(C::D(A::B("")))

    ""
  }
}
--------------------------------------------------------------------------------
class C extends _E {
  constructor(_0) {
    super();
    this._0 = _0;
    this.length = 1;
  }
};

class D extends _E {
  constructor(_0) {
    super();
    this._0 = _0;
    this.length = 1;
  }
};

class B extends _E {
  constructor() {
    super();
    this.length = 0;
  }
};

class A extends _C {
  a(b) {
    return (() => {
      let c = b;

      if (c instanceof B) {
        return ``;
      } else if (c instanceof D) {
        const d = c._0;

        return (() => {
          let e = d;

          if (e instanceof C) {
            const f = e._0;
            return f;
          };
        })();
      };
    })();
  }

  render() {
    this.a(new D(new C(``)));
    return ``;
  }
};

A.displayName = "Main";
