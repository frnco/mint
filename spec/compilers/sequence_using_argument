component Main {
  state greeting : String = "ho"

  fun test : Promise(Never, Promise(Void)) {
    sequence {
      newGreeting = "hello"
      next { greeting = newGreeting }
    }
  }

  fun render : Html {
    test()

    <div/>
  }
}
--------------------------------------------------------------------------------
class A extends _C {
  constructor(props) {
    super(props);

    this.state = new Record({
      c: `ho`
    });
  }

  get c() {
    return this.state.c;
  }

  a() {
    return (async () => {
      let _ = null;

      try {
        let b = await `hello`;

        _ = await new Promise((_resolve) => {
          this.setState(_u(this.state, new Record({
            c: b
          })), _resolve)
        });
      } catch (_error) {
        if (!(_error instanceof DoError)) {
          console.warn(`Unhandled error in sequence expression:`);
          console.warn(_error);
        }
      };

      return _;
    })();
  }

  render() {
    this.a();
    return _h("div", {});
  }
};

A.displayName = "Main";
